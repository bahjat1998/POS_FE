import { ChangeDetectorRef, Component, ContentChild, ElementRef, HostListener, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/* tslint:disable:component-selector */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["modalHeader"];
const _c1 = ["modalBody"];
const _c2 = ["modalFooter"];
function ModalComponent_div_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ModalComponent_div_0_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ModalComponent_div_0_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ModalComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "div", 4);
    ɵngcc0.ɵɵtemplate(4, ModalComponent_div_0_ng_container_4_Template, 1, 0, "ng-container", 5);
    ɵngcc0.ɵɵelementStart(5, "button", 6);
    ɵngcc0.ɵɵlistener("click", function ModalComponent_div_0_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r4.close()); });
    ɵngcc0.ɵɵtext(6, "\u00D7");
    ɵngcc0.ɵɵelementEnd()();
    ɵngcc0.ɵɵelementStart(7, "div", 7);
    ɵngcc0.ɵɵtemplate(8, ModalComponent_div_0_ng_container_8_Template, 1, 0, "ng-container", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "div", 8);
    ɵngcc0.ɵɵtemplate(10, ModalComponent_div_0_ng_container_10_Template, 1, 0, "ng-container", 5);
    ɵngcc0.ɵɵelementEnd()()()();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("in", ctx_r0.visibleAnimate);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.header);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.body);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.footer);
} }
class ModalComponent {
    /**
     * @param {?} elementRef
     * @param {?} changeDetectorRef
     */
    constructor(elementRef, changeDetectorRef) {
        this.elementRef = elementRef;
        this.changeDetectorRef = changeDetectorRef;
        this.closeOnOutsideClick = true;
        this.visible = false;
        this.visibleAnimate = false;
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        // Prevent modal from not executing its closing actions if the user navigated away (for example,
        // through a link).
        this.close();
    }
    /**
     * @return {?}
     */
    open() {
        document.body.classList.add('modal-open');
        this.visible = true;
        setTimeout(() => {
            this.visibleAnimate = true;
        });
    }
    /**
     * @return {?}
     */
    close() {
        document.body.classList.remove('modal-open');
        this.visibleAnimate = false;
        setTimeout(() => {
            this.visible = false;
            this.changeDetectorRef.markForCheck();
        }, 200);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onContainerClicked(event) {
        if (((event.target)).classList.contains('modal') && this.isTopMost() && this.closeOnOutsideClick) {
            this.close();
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onKeyDownHandler(event) {
        // If ESC key and TOP MOST modal, close it.
        if (event.key === 'Escape' && this.isTopMost()) {
            this.close();
        }
    }
    /**
     * Returns true if this modal is the top most modal.
     * @return {?}
     */
    isTopMost() {
        return !this.elementRef.nativeElement.querySelector(':scope modal > .modal');
    }
}
ModalComponent.ɵfac = function ModalComponent_Factory(t) { return new (t || ModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ModalComponent, selectors: [["modal"]], contentQueries: function ModalComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c1, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c2, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.header = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.body = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footer = _t.first);
    } }, hostBindings: function ModalComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ModalComponent_click_HostBindingHandler($event) { return ctx.onContainerClicked($event); })("keydown", function ModalComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDownHandler($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { closeOnOutsideClick: "closeOnOutsideClick" }, decls: 1, vars: 1, consts: [["class", "modal fade", "role", "dialog", "tabindex", "-1", 3, "in", 4, "ngIf"], ["role", "dialog", "tabindex", "-1", 1, "modal", "fade"], [1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], [4, "ngTemplateOutlet"], ["data-dismiss", "modal", "type", "button", "aria-label", "Close", 1, "close", 3, "click"], [1, "modal-body"], [1, "modal-footer"]], template: function ModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ModalComponent_div_0_Template, 11, 5, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.visible);
    } }, dependencies: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], styles: ["modal .modal {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center; }\n\n      .modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      min-height: 100%;\n      background-color: rgba(0, 0, 0, 0.15);\n      z-index: 42; }\n\n      .modal.in {\n      opacity: 1; }"] });
/**
 * @nocollapse
 */
ModalComponent.ctorParameters = () => [
    { type: ElementRef, },
    { type: ChangeDetectorRef, },
];
ModalComponent.propDecorators = {
    'header': [{ type: ContentChild, args: ['modalHeader',] },],
    'body': [{ type: ContentChild, args: ['modalBody',] },],
    'footer': [{ type: ContentChild, args: ['modalFooter',] },],
    'closeOnOutsideClick': [{ type: Input },],
    'onContainerClicked': [{ type: HostListener, args: ['click', ['$event'],] },],
    'onKeyDownHandler': [{ type: HostListener, args: ['document:keydown', ['$event'],] },],
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalComponent, [{
        type: Component,
        args: [{ selector: 'modal', template: `
    <div 
      class="modal fade"
      role="dialog"
      tabindex="-1"
      [class.in]="visibleAnimate"
      *ngIf="visible">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <ng-container *ngTemplateOutlet="header"></ng-container>
            <button class="close" data-dismiss="modal" type="button" aria-label="Close" (click)="close()">×</button>
          </div>
          <div class="modal-body">
            <ng-container *ngTemplateOutlet="body"></ng-container>
          </div>
          <div class="modal-footer">
            <ng-container *ngTemplateOutlet="footer"></ng-container>
          </div>
        </div>
      </div>
    </div>
  `, styles: ["\n    /**\n     * A more specific selector overwrites bootstrap display properties, but they still enable users\n     * to overwite them on their apps.\n     */\n    /deep/ modal .modal {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center; }\n\n    /deep/ .modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      min-height: 100%;\n      background-color: rgba(0, 0, 0, 0.15);\n      z-index: 42; }\n\n    /deep/ .modal.in {\n      opacity: 1; }\n  "] }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { closeOnOutsideClick: [{
            type: Input
        }], 
    /**
     * @param {?} event
     * @return {?}
     */
    onContainerClicked: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], 
    /**
     * @param {?} event
     * @return {?}
     */
    onKeyDownHandler: [{
            type: HostListener,
            args: ['document:keydown', ['$event']]
        }], header: [{
            type: ContentChild,
            args: ['modalHeader']
        }], body: [{
            type: ContentChild,
            args: ['modalBody']
        }], footer: [{
            type: ContentChild,
            args: ['modalFooter']
        }] }); })();

class ModalModule {
}
ModalModule.ɵfac = function ModalModule_Factory(t) { return new (t || ModalModule)(); };
ModalModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ModalModule });
ModalModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });
/**
 * @nocollapse
 */
ModalModule.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                ],
                exports: [ModalComponent],
                declarations: [ModalComponent],
                providers: []
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, { declarations: function () { return [ModalComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ModalComponent]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ModalComponent, ModalModule };

//# sourceMappingURL=angular-custom-modal.js.map